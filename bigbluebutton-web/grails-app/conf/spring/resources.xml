<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:integration="http://www.springframework.org/schema/integration"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
			http://www.springframework.org/schema/integration/jms
			http://www.springframework.org/schema/integration/jms/spring-integration-jms-1.0.xsd
			http://www.springframework.org/schema/integration/stream
			http://www.springframework.org/schema/integration/stream/spring-integration-stream-1.0.xsd
			http://www.springframework.org/schema/integration/file
			http://www.springframework.org/schema/integration/file/spring-integration-file-1.0.xsd
			">
	 <!--  				
	<bean id="redisDispatcher" class="org.bigbluebutton.redis.RedisDispatcher">
        <constructor-arg index="0" value="${redisHost}" />
        <constructor-arg index="1" value="${redisPort}" />
    </bean>
    -->
    <bean id="redisListener" class="org.bigbluebutton.redis.RedisListener" init-method="init">
        <constructor-arg index="0" value="${redisHost}" />
        <constructor-arg index="1" value="${redisPort}" />
        <property name="pubsubListener" ref="pubsubListener"></property>
    </bean>
    
    <bean id="pubsubListener" class="org.bigbluebutton.redis.PubsubListener">
    	<property name="dynamicConferenceService" ref="dynamicConferenceService"></property>
    </bean>
    
	<!-- Spring Integration / JMS gateways -->
    <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL">
            <value>tcp://localhost:61616</value>
        </property>
    </bean>

	<!-- INCOMING MESSAGES -->

	<!-- conferenceStarted -->
	<jms:inbound-channel-adapter id="jmsInConferenceStarted"
		destination-name="conferenceStartedEvents"
        channel="conferenceStarted"
        extract-payload="true">
		<integration:poller>
			<integration:interval-trigger interval="5" time-unit="SECONDS"/>
		</integration:poller>
	</jms:inbound-channel-adapter>
	<integration:channel id="conferenceStarted"/>
	<integration:service-activator input-channel="conferenceStarted" ref="dynamicConferenceService" method="conferenceStarted" />

	<!-- conferenceEnded -->
	<jms:inbound-channel-adapter id="jmsInConferenceEnded"
		destination-name="conferenceEndedEvents"
        channel="conferenceEnded"
        extract-payload="true">
		<integration:poller>
			<integration:interval-trigger interval="5" time-unit="SECONDS"/>
		</integration:poller>
	</jms:inbound-channel-adapter>
	<integration:channel id="conferenceEnded"/>
	<integration:service-activator input-channel="conferenceEnded" ref="dynamicConferenceService" method="conferenceEnded" />

	<!-- participantsUpdated -->
	<jms:inbound-channel-adapter id="jmsInParticipantsUpdated"
		destination-name="participantsUpdatedEvents"
        channel="participantsUpdated"
        extract-payload="true">
		<integration:poller>
			<integration:interval-trigger interval="5" time-unit="SECONDS"/>
		</integration:poller>
	</jms:inbound-channel-adapter>
	<integration:channel id="participantsUpdated"/>
	<integration:service-activator input-channel="participantsUpdated" ref="dynamicConferenceService" method="participantsUpdated" />

<!--	<stream:stdout-channel-adapter id="stdout" channel="jmsinToStdoutChannel" append-newline="true"/>-->

	<!-- OUTGOING MESSAGES -->
	<integration:gateway id="conferenceEventListener" service-interface="org.bigbluebutton.api.IApiConferenceEventListener" />

	<!-- endMeetingRequest -->
	<integration:channel id="endMeetingRequest" />
	<jms:outbound-channel-adapter id="endMeetingRequestJmsOut" destination="endMeetingRequestEvents" channel="endMeetingRequest" />
    <bean id="endMeetingRequestEvents" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="endMeetingRequestEvents"/>
    </bean>

	<import resource="doc-conversion.xml" />

</beans>