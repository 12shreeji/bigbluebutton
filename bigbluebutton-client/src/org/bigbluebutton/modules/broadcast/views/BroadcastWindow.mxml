<?xml version="1.0" encoding="utf-8"?>
<bcast:MDIWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
					  xmlns:bcast="flexlib.mdi.containers.*" 
					  implements="org.bigbluebutton.common.IBbbModuleWindow" preinitialize="onCreationComplete()"
					  xmlns:mate="http://mate.asfusion.com/" showCloseButton="false"
					  layout="absolute" backgroundColor="blue"
					  resize="onWindowResize()" resizeEnd="onWindowResize()"
					  >
	<mate:Listener type="{MadePresenterEvent.SWITCH_TO_PRESENTER_MODE}" method="becomePresenter" />
	<mate:Listener type="{MadePresenterEvent.SWITCH_TO_VIEWER_MODE}" method="becomeViewer" />
	
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import mx.events.ResizeEvent;
			
			import org.bigbluebutton.common.LogUtil;
			import org.bigbluebutton.main.events.MadePresenterEvent;
			import org.bigbluebutton.main.views.MainCanvas;
			import org.bigbluebutton.modules.broadcast.managers.BroadcastManager;
			import org.bigbluebutton.modules.broadcast.models.BroadcastOptions;
			import org.bigbluebutton.modules.broadcast.models.Stream;
			import org.bigbluebutton.modules.broadcast.models.Streams;
			
			public var broadcastManager:BroadcastManager;
			public var curStream:Stream;
			
			[Bindable]
			private var xPosition:int = 1;
			
			[Bindable]
			private var yPosition:int = 1;
			
			[Bindable]
			private var defHeight:int = 300;
			
			[Bindable]
			private var defWidth:int = 400;
			
			public var options:BroadcastOptions;
			
			[Bindable]
			public var streams:Streams;
			
			public var videoHolder2:UIComponent;
			
			private function onCreationComplete():void {
				xPosition = options.x;
				yPosition = options.y;
				defWidth = options.width;
				defHeight = options.height;
				this.x = options.x;
				this.y = options.y;
				this.width = options.width;
				this.height = options.height;
			}
			
			private function becomePresenter(e:MadePresenterEvent):void{
				videoStreamList.visible = true;
			}
			
			private function becomeViewer(e:MadePresenterEvent):void{
				videoStreamList.visible = false;
			}
			
			private function playStopVideo():void {
				if (playBtn.selected) {
					broadcastManager.playVideo(streamsComboBox.selectedIndex);	
					playBtn.label = "Stop";
				} else {
					playBtn.label = "Play";
					stopVideo();
				}
			}
			
			public function removeDisplay():void {
				videoHolder.removeChild(videoHolder2);			
			}
						
			private function stopVideo():void {
				broadcastManager.stopVideo();
			}
			
			public function getPrefferedPosition():String {	
				this.x = options.x;
				this.y = options.y;
				this.width = options.width;
				this.height = options.height;
				return options.position;
			}
			
			public function addDisplay():void {
				videoHolder2 = new UIComponent();
				videoHolder2.width = videoHolder.width;
				videoHolder2.height = videoHolder.height;
				videoHolder.addChild(videoHolder2);
			}
			
			public function onWindowResize():void {
				if (videoHolder2 != null && curStream != null) {
					videoHolder2.percentHeight = 100;
					videoHolder2.percentWidth = 100;
					curStream.onResize();
				}
			}
			
		]]>
	</mx:Script>
		<mx:HBox id="videoHolder" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" backgroundColor="green" 
				 horizontalScrollPolicy="off" verticalScrollPolicy="off"/>		
	<mx:ControlBar width="100%" height="30" paddingTop="0" borderStyle="outset" horizontalAlign="center">
		<mx:HBox x="1" y="1" id="videoStreamList" width="100%" height="30" horizontalAlign="center">
			<mx:ComboBox id="streamsComboBox" width="85%" dataProvider="{streams.streamNames}" />
			<mx:Button id="playBtn" label="Play" width="15% " click="playStopVideo()" toggle="true"/>				
		</mx:HBox>
	</mx:ControlBar>
</bcast:MDIWindow>
