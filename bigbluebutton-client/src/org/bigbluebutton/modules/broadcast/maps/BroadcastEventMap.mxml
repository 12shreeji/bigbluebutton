<?xml version="1.0" encoding="utf-8"?>

<!--
  BigBlueButton open source conferencing system - http://www.bigbluebutton.org
  
  Copyright (c) 2010 BigBlueButton Inc. and by respective authors (see below).
  
  BigBlueButton is free software; you can redistribute it and/or modify it under the 
  terms of the GNU Lesser General Public License as published by the Free Software 
  Foundation; either version 2.1 of the License, or (at your option) any later 
  version. 
  
  BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
  
  You should have received a copy of the GNU Lesser General Public License along 
  with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.
 
  $Id: $
-->

<EventMap xmlns="http://mate.asfusion.com/"
	xmlns:mx="http://www.adobe.com/2006/mxml">
	<mx:Script>
		<![CDATA[
			import com.asfusion.mate.events.Dispatcher;
			
			import mx.events.FlexEvent;
			
			import org.bigbluebutton.main.events.MadePresenterEvent;
			import org.bigbluebutton.modules.broadcast.managers.BroadcastManager;
			import org.bigbluebutton.modules.broadcast.services.BroadcastService;
			
		]]>
	</mx:Script>
	
	<EventHandlers type="{FlexEvent.PREINITIALIZE}">
		<ObjectBuilder generator="{BroadcastManager}" cache="global"/>
	</EventHandlers>
	
	<EventHandlers type="BroadcastModuleStartEvent">
		<MethodInvoker generator="{BroadcastManager}" method="start" />
	</EventHandlers>	

	<EventHandlers type="{MadePresenterEvent.SWITCH_TO_PRESENTER_MODE}">
		<MethodInvoker generator="{BroadcastManager}" method="handleSwitchToPresenterMode" />
	</EventHandlers>
	
	<EventHandlers type="{MadePresenterEvent.SWITCH_TO_VIEWER_MODE}">
		<MethodInvoker generator="{BroadcastManager}" method="handleSwitchToViewerMode" />
	</EventHandlers>
	
	<EventHandlers type="playBroadcastStream">
		<MethodInvoker generator="{BroadcastManager}" method="handlePlayStreamRequest" arguments="{event}"/>
	</EventHandlers>

	<EventHandlers type="stopBroadcastStream">
		<MethodInvoker generator="{BroadcastManager}" method="handleStopStreamRequest" arguments="{event}"/>
	</EventHandlers>
	
	<EventHandlers type="whatIsTheCurrentStreamRequest">
		<MethodInvoker generator="{BroadcastManager}" method="handleWhatIsTheCurrentStreamRequest" arguments="{event}"/>
	</EventHandlers>
	
	<EventHandlers type="whatIsTheCurrentStreamReply">
		<MethodInvoker generator="{BroadcastManager}" method="handleWhatIsTheCurrentStreamReply" arguments="{event}"/>
	</EventHandlers>
	
	
	
</EventMap>
